#!/bin/bash
set -ex

WORK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
source "$WORK_DIR/../../lib/common"

CERTBOT_VERSION=$(GetCerbotVersionFromTag "$DOCKER_TAG")

for TARGET_ARCH in "${ALL_TARGET_ARCH[@]}"; do
    QEMU_ARCH=$(GetQemuArch "$TARGET_ARCH")
    docker build \
        --build-arg CERTBOT_VERSION="${CERTBOT_VERSION}" \
        --build-arg TARGET_ARCH="${TARGET_ARCH}" \
        --build-arg QEMU_ARCH="${QEMU_ARCH}" \
        -f "${DOCKERFILE_PATH}" \
        -t "${DOCKER_REPO}:${TARGET_ARCH}-v${CERTBOT_VERSION}" \
        .
    docker push  "${DOCKER_REPO}:${TARGET_ARCH}-v${CERTBOT_VERSION}"

    docker tag "${DOCKER_REPO}:${TARGET_ARCH}-v${VERSION}" "${DOCKER_REPO}:${TARGET_ARCH}-latest"
    docker push "${DOCKER_REPO}:${TARGET_ARCH}-latest"
    if [ "${TARGET_ARCH}" == "amd64" ]; then
        docker tag "${DOCKER_REPO}:${TARGET_ARCH}-v${VERSION}" "${DOCKER_REPO}:v${VERSION}"
        docker tag "${DOCKER_REPO}:${TARGET_ARCH}-latest" "${DOCKER_REPO}:latest"
        docker push "${DOCKER_REPO}:v${VERSION}"
        docker push "${DOCKER_REPO}:latest"
    fi
done
